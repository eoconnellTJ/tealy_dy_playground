@mixin button-color($color-background, $color-text: $white) {
  $color-hover: darken($color-background, 5%);

  background: $color-background;
  border-color: $color-background;
  color: $color-text;

  &:hover,
  &:focus {
    background: $color-hover;
    border-color: $color-hover;
    color: $color-text;
  }

  &.inverted {
    background: transparent;
    color: $color-background;

    &:hover,
    &:focus {
      color: $color-hover;
    }
  }
}

// Buttons have a height of 55px
// ($border * 2) + ($padding-top + $padding-bottom) + ($font-size * $line-height) = 55px
// (2px * 2) + (16px + 16px) + (12px * 1.6) = 55px
.button,
#{$all-buttons} {
  @include button-color($color-accent);
  display: inline-block;
  padding: 16px 60px;
  border-width: 2px;
  border-style: solid;
  border-radius: 0; // removes border radius on iOS
  font-family: $font-family-heading;
  font-size: 12px;
  font-weight: bold;
  line-height: 1.6em;
  @include small-caps;
  text-align: center;
  text-decoration: none;
  cursor: pointer;

  // Reset browser defaults
  box-shadow: none;

  // TODO: discuss and implement a better alternative to :focus
  // rules. Accessibility is important.
  &:focus {
    outline: none;
  }

  &.small {
    padding: 1em;
  }

  &.expand {
    // Remove the massive left/right padding when the button is 100%
    // width to avoid odd line breaks
    @include padding(null 20px);
  }

  &.button-secondary {
    @include button-color($color-primary);
  }

  &.button-paypal {
    @include button-color($color-paypal);
    @include padding(11px null);
    line-height: 1;

    svg {
      @include size(auto 27px);
    }
  }

  &.button-desaturated {
    @include button-color($color-grey, $color-grey-dark);

    &.inverted,
    &.inverted:hover,
    &.inverted:focus {
      color: $color-grey-dark;
    }

    &.inverted:hover {
      border-color: $color-grey-dark;
    }
  }

  .ng-submitted &.error {
    @include button-color($color-accent);
  }

  &.disabled,
  &[disabled] {
    @include button-color($color-grey);
    cursor: default;
  }

  .input-combo-wrapper & {
    @media screen and (max-width: $breakpoint-input-combo - 1) {
      width: 100%;
      margin-top: 10px;
    }
  }
}

.button-bare {
  background: none;
  border: 0;
  color: $color-link;
  padding: 0.5em;

  &:focus,
  &:hover {
    background: none;
    color: $color-link-hover;
  }
}

.button-link {
  background: none;
  border: 0;
  color: $color-link;
  padding: 0;
  font-family: $font-family-body;
  text-transform: none;
  text-decoration: underline;
  letter-spacing: 0;
  font-weight: normal;
  font-size: $font-size-base;
  cursor: pointer;

  &:hover,
  &:focus {
    background: none;
    color: $color-link-hover;
  }
}

.button-group .button {
  @media #{$mobile-only} {
    margin-bottom: 10px;
  }

  @media #{$desktop-only} {
    &:first-child {
      margin-left: 0;
    }

    margin-left: 1.5rem;
  }
}
